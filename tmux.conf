# $Id: vim-keys.conf,v 1.2 2010-09-18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

set -g default-terminal "screen-256color"
set -g display-time 3000
set -sg escape-time 1
set -g history-limit 10000
set -g base-index 1
set -g pane-base-index 1

set -g prefix ^a
unbind ^b
bind a send-prefix

# visual notification
setw -g monitor-activity on
#set -g visual-activity on

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi

# turns on mouse support entirely
#setw -g mouse on

# vi-style controls for yank and paste
#unbind [
#bind Escape copy-mode
#unbind p
#bind p paste-buffer
#bind -t vi-copy 'v' begin-selection
#bind -t vi-copy 'y' copy-selection

# system clipbroad
set -g default-command "reattach-to-user-namespace -l /bin/zsh"
bind ^y run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display "Copied tmux buffer to system clipboard."
bind ^p run "tmux set-buffer $(reattach-to-user-namespace pbpaste); tmux paste-buffer"

# zoom pane
#bind ^O run "#(~/.tmux/tmux-zoom.sh)"

# powerline
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
#bind ^[ run '~/path/to/tmux-powerline/mute_powerline.sh left'      # Mute left statusbar.
#bind ^] run '~/path/to/tmux-powerline/mute_powerline.sh right'     # Mute right statusbar.

# reload tmux configuration
bind r source-file ~/.tmux.conf \; display "Configuration reloaded."

# broadcast input to all panes
bind ^i setw synchronize-panes \; display "Broadcast input toggled."

# disable mouse control by default - change 'off' to 'on' to enable by default.
setw -g mouse off
# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse Mode: ON'
# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse Mode: OFF'

# Plugin Manager #
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Plugin Settings
set -g @continuum-restore 'on'
set -g @continuum-save-interval '60'
# restoring vim sessions
set -g @resurrect-strategy-vim 'session'
# restoring pane contents
set -g @resurrect-capture-pane-contents 'on'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
